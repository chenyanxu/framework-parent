<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<blueprint xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
    <reference id="configService" interface="com.kalix.framework.core.api.config.IConfigService"/>
    <camelContext id="configInfoCamel" xmlns="http://camel.apache.org/schema/blueprint">
        <!-- configure rest to use the camel-servlet component, and use json binding mode -->
        <!-- and tell to output json in pretty print mode -->
        <!-- setup context path and port number that Apache Tomcat will deploy this application with,
             as we use the servlet component, then we need to aid Camel to tell it these details so Camel
             knows the url to the REST services.
             Notice: This is optional, but needed if the RestRegistry should enlist accurate information.
             You can access the RestRegistry from JMX at runtime -->
        <restConfiguration component="servlet" bindingMode="json">
            <dataFormatProperty key="prettyPrint" value="${rest.pretty}"/>
        </restConfiguration>

        <!-- defines the rest services using the context-path /user -->
        <rest path="/system" consumes="application/json;charset=utf-8" produces="application/json;charset=utf-8">
            <description>Kalix System rest service</description>

            <!-- this is a rest GET to view an user by the given id -->
            <get id="route-getConfigInfo" uri="/config"
                 outType="com.kalix.framework.core.api.persistence.JsonData">
                <description>Get Info by Config</description>
                <to uri="bean:configService?method=getConfigInfo(${header.jsonStr})"/>
            </get>

            <post id="route-setConfigInfo" uri="/config"
                 outType="com.kalix.framework.core.api.persistence.JsonStatus">
                <description>Set Info by Config</description>
                <to uri="bean:configService?method=configureConfigInfo(${header.content},${header.AppName})"/>
            </post>

            <get id="route-getConfigById" uri="/config/getInfo"
                 outType="com.kalix.framework.core.api.persistence.JsonData">
                <description>get Info by id</description>
                <to uri="bean:configService?method=getConfigInfoById(${header.AppName},${header.id})"/>
            </get>

        </rest>
    </camelContext>
</blueprint>